// Copyright (c) Michael Heilmann 2018
#include "Nucleus/Interpreter/Context-private.h.in"

Nucleus_Interpreter_NonNull() static Nucleus_Interpreter_ScratchSpace *
Nucleus_Interpreter_ScratchSpace_create
    (
        Nucleus_Interpreter_Context *context,
        size_t numberOfBytes
    )
{
    Nucleus_Interpreter_ScratchSpace *temporary =
        Nucleus_Interpreter_ProcessContext_allocateUnmanagedMemory
            (
                NUCLEUS_INTERPRETER_PROCESSCONTEXT(context),
                sizeof(Nucleus_Interpreter_ScratchSpace) +
                numberOfBytes
            );
    temporary->numberOfBytes = numberOfBytes;
    return temporary;
}

Nucleus_Interpreter_NonNull() static void
Nucleus_Interpreter_ScratchSpace_destroy
    (
        Nucleus_Interpreter_Context *context,
        Nucleus_Interpreter_ScratchSpace *scratchSpace
    )
{ Nucleus_Interpreter_ProcessContext_deallocateUnmanagedMemory(NUCLEUS_INTERPRETER_PROCESSCONTEXT(context), scratchSpace); }
